import * as vscode from 'vscode';
import * as express from 'express';
import { Request, Response } from 'express';

let server: any = null;
let outputChannel: vscode.OutputChannel;
let hookEnabled = false;
let originalEnvValue: string | undefined;

export function activate(context: vscode.ExtensionContext) {
    console.log('Roo Hook Tester v4 extension is now active!');
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –≤—ã–≤–æ–¥–∞ –¥–ª—è –ª–æ–≥–æ–≤
    outputChannel = vscode.window.createOutputChannel('Roo Hook Tester v4');
    outputChannel.show();
    outputChannel.appendLine('üöÄ Roo Hook Tester v6 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!');
    outputChannel.appendLine(`üìç –í—Ä–µ–º—è: ${new Date().toISOString()}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    originalEnvValue = process.env.ROO_HOOK_URL;
    
    // –°–æ–∑–¥–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ö—É–∫–æ–≤
    const app = express();
    app.use(express.json({ limit: '50mb' }));

    // –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ö—É–∫–∞
    app.post('/', (req: Request, res: Response) => {
        outputChannel.appendLine('\n=== üì• –ü–ï–†–ï–•–í–ê–ß–ï–ù –ó–ê–ü–†–û–° –ö AI ===');
        outputChannel.appendLine(`–í—Ä–µ–º—è: ${new Date().toISOString()}`);
        outputChannel.appendLine(`Request type: ${req.body.type}`);
        
        if (req.body.type === 'api_request' && req.body.data) {
            const data = req.body.data;
            const lastMessage = data.messages?.[data.messages.length - 1];
            
            // –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º content - –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ –º–∞—Å—Å–∏–≤–æ–º –æ–±—ä–µ–∫—Ç–æ–≤
            let contentText = '';
            if (lastMessage) {
                if (typeof lastMessage.content === 'string') {
                    contentText = lastMessage.content;
                } else if (Array.isArray(lastMessage.content)) {
                    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —á–∞—Å—Ç–∏
                    contentText = lastMessage.content
                        .filter((item: any) => item.type === 'text')
                        .map((item: any) => item.text)
                        .join(' ');
                } else {
                    contentText = JSON.stringify(lastMessage.content);
                }
                
                outputChannel.appendLine(`\nüìù –°–û–û–ë–©–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:`);
                outputChannel.appendLine(`"${contentText}"`);
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ  
            vscode.window.showInformationMessage(
                `üéØ –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–æ: "${contentText.substring(0, 50)}..."`
            );
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –æ—Ç–≤–µ—Ç –æ—Ç hook (–ë–ï–ó –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ AI!)
            const directResponse = `ü§ñ –≠–¢–û –û–¢–í–ï–¢ –û–¢ HOOK-–†–ê–°–®–ò–†–ï–ù–ò–Ø!

–Ø –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${contentText}"

–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç AI –º–æ–¥–µ–ª–∏, –∞ –æ—Ç –≤–∞—à–µ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è.
–•—É–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! 

–î–µ—Ç–∞–ª–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞:
- –í—Ä–µ–º—è: ${new Date().toISOString()}
- –î–ª–∏–Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞: ${data.systemPrompt?.length || 0} —Å–∏–º–≤–æ–ª–æ–≤
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: ${data.messages?.length || 0}
- Hook –≤–µ—Ä—Å–∏—è: v6

üö´ –ó–ê–ü–†–û–° –ö AI –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù! üö´
–≠—Ç–æ—Ç –æ—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω –ª–æ–∫–∞–ª—å–Ω–æ –±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É.

–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ - –∑–Ω–∞—á–∏—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üéâ`;

            outputChannel.appendLine('\nüö´ –ë–õ–û–ö–ò–†–£–Æ –ó–ê–ü–†–û–° –ö AI –ò –í–û–ó–í–†–ê–©–ê–Æ –ü–†–Ø–ú–û–ô –û–¢–í–ï–¢');
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä—è–º–æ–π –æ—Ç–≤–µ—Ç (–±–ª–æ–∫–∏—Ä—É–µ–º AI)
            res.json({
                directResponse: directResponse,
                modifiedMetadata: {
                    ...data.metadata,
                    hookIntercepted: true,
                    hookVersion: 'v6',
                    interceptTime: new Date().toISOString(),
                    aiBlocked: true
                }
            });
            
        } else {
            outputChannel.appendLine('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞');
            res.json({ passthrough: true });
        }
    });

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    const startServer = () => {
        try {
            server = app.listen(3000, () => {
                outputChannel.appendLine('\n‚úÖ Hook server –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
                vscode.window.showInformationMessage('‚úÖ Hook Server –∑–∞–ø—É—â–µ–Ω');
            });
            
            server.on('error', (error: any) => {
                outputChannel.appendLine(`‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${error.message}`);
                if (error.code === 'EADDRINUSE') {
                    vscode.window.showErrorMessage('‚ùå –ü–æ—Ä—Ç 3000 —É–∂–µ –∑–∞–Ω—è—Ç!');
                }
            });
            
        } catch (error: any) {
            outputChannel.appendLine(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä: ${error.message}`);
            vscode.window.showErrorMessage(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ö—É–∫–∞
    const activateHook = () => {
        if (!hookEnabled) {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –¥–ª—è WSL –æ–∫—Ä—É–∂–µ–Ω–∏—è
            // –í WSL Windows —Ö–æ—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ IP —à–ª—é–∑–∞
            const hookUrl = process.platform === 'win32' ? 'http://localhost:3000' : 'http://172.21.240.1:3000';
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ VS Code
            process.env.ROO_HOOK_URL = hookUrl;
            
            // –¢–∞–∫–∂–µ –ø—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ vscode.env (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
            try {
                // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
                vscode.commands.executeCommand('setContext', 'roo.hookUrl', hookUrl);
            } catch (e) {
                outputChannel.appendLine(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç: ${e}`);
            }
            hookEnabled = true;
            
            outputChannel.appendLine('\nüî• –•–£–ö –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!');
            outputChannel.appendLine(`Platform: ${process.platform}`);
            outputChannel.appendLine(`ROO_HOOK_URL = ${process.env.ROO_HOOK_URL}`);
            
            vscode.window.showInformationMessage(
                'üî• Hook –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∫ AI –±—É–¥—É—Ç –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω—ã.',
                'OK'
            );
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –µ—Å–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω
            if (!server) {
                startServer();
            }
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ö—É–∫–∞
    const deactivateHook = () => {
        if (hookEnabled) {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            if (originalEnvValue) {
                process.env.ROO_HOOK_URL = originalEnvValue;
            } else {
                delete process.env.ROO_HOOK_URL;
            }
            hookEnabled = false;
            
            outputChannel.appendLine('\nüõë –•–£–ö –î–ï–ê–ö–¢–ò–í–ò–†–û–í–ê–ù!');
            outputChannel.appendLine(`ROO_HOOK_URL = ${process.env.ROO_HOOK_URL || '—É–¥–∞–ª–µ–Ω–∞'}`);
            
            vscode.window.showInformationMessage(
                'üõë Hook –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. Roo Code —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.'
            );
        }
    };

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ö—É–∫–∞
    let startCommand = vscode.commands.registerCommand('roo-hook-tester.start', () => {
        outputChannel.appendLine('\n‚ñ∂Ô∏è –ö–æ–º–∞–Ω–¥–∞: Start Hook');
        activateHook();
    });

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ö—É–∫–∞
    let stopCommand = vscode.commands.registerCommand('roo-hook-tester.stop', () => {
        outputChannel.appendLine('\n‚èπÔ∏è –ö–æ–º–∞–Ω–¥–∞: Stop Hook');
        deactivateHook();
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        if (server) {
            server.close();
            server = null;
            outputChannel.appendLine('üõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
    });

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
    let statusCommand = vscode.commands.registerCommand('roo-hook-tester.status', () => {
        outputChannel.appendLine('\nüìä –°–¢–ê–¢–£–°:');
        outputChannel.appendLine(`- Hook –∞–∫—Ç–∏–≤–µ–Ω: ${hookEnabled ? '–î–ê ‚úÖ' : '–ù–ï–¢ ‚ùå'}`);
        outputChannel.appendLine(`- –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: ${server ? '–î–ê ‚úÖ' : '–ù–ï–¢ ‚ùå'}`);
        outputChannel.appendLine(`- ROO_HOOK_URL: ${process.env.ROO_HOOK_URL || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
        
        const status = hookEnabled ? '‚úÖ Hook –∞–∫—Ç–∏–≤–µ–Ω' : '‚ùå Hook –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω';
        vscode.window.showInformationMessage(`–°—Ç–∞—Ç—É—Å: ${status}`);
    });

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤
    let clearCommand = vscode.commands.registerCommand('roo-hook-tester.clear', () => {
        outputChannel.clear();
        outputChannel.appendLine('üßπ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã');
    });

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ö—É–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    const autoStart = context.globalState.get<boolean>('autoStartHook', false);
    if (autoStart) {
        outputChannel.appendLine('\nü§ñ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Ö—É–∫–∞...');
        activateHook();
    }

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
    let toggleAutoStartCommand = vscode.commands.registerCommand('roo-hook-tester.toggleAutoStart', async () => {
        const current = context.globalState.get<boolean>('autoStartHook', false);
        await context.globalState.update('autoStartHook', !current);
        vscode.window.showInformationMessage(
            `–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Ö—É–∫–∞: ${!current ? '–≤–∫–ª—é—á–µ–Ω ‚úÖ' : '–≤—ã–∫–ª—é—á–µ–Ω ‚ùå'}`
        );
    });

    context.subscriptions.push(
        startCommand, 
        stopCommand, 
        statusCommand, 
        clearCommand, 
        toggleAutoStartCommand, 
        outputChannel
    );

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    vscode.window.showInformationMessage(
        'Roo Hook v6 –≥–æ—Ç–æ–≤! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+Shift+P ‚Üí "Start Hook"',
        '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ–π—á–∞—Å'
    ).then(selection => {
        if (selection === '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ–π—á–∞—Å') {
            vscode.commands.executeCommand('roo-hook-tester.start');
        }
    });
}

export function deactivate() {
    if (server) {
        server.close();
        server = null;
    }
    if (outputChannel) {
        outputChannel.dispose();
    }
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    if (originalEnvValue) {
        process.env.ROO_HOOK_URL = originalEnvValue;
    } else {
        delete process.env.ROO_HOOK_URL;
    }
}